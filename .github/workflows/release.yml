name: Release Go Binaries

permissions:
  contents: write
  packages: write

on: 
  release:
    types: [created]

jobs:
  releases-matrix:
    name: assets-uploader
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v3

    - name: Set APP_VERSION env
      run: echo APP_VERSION=$(basename ${GITHUB_REF}) >> ${GITHUB_ENV}
    - name: Set BUILD_TIME env
      run: echo BUILD_TIME=$(date) >> ${GITHUB_ENV}
    - name: Environment Printer
      uses: managedkaos/print-env@v1.0

    - uses: ui86/go-release-action@v1.0.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        project_path: "./cmd/github-assets-uploader"
        binary_name: github-assets-uploader
        build_flags: -v
        md5sum: false
        ldflags: -X "github.com/ui86/assets-uploader/util/appversion.appVersion=${{ env.APP_VERSION }}" -X "github.com/ui86/assets-uploader/util/appversion.buildTime=${{ env.BUILD_TIME }}" -X github.com/ui86/assets-uploader/util/appversion.gitCommit=${{ github.sha }} -X main.gitRef=${{ github.ref }}

    - uses: ui86/go-release-action@v1.0.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        project_path: "./cmd/github-assets-cleaner"
        binary_name: github-assets-cleaner
        build_flags: -v
        md5sum: false
        ldflags: -X "github.com/ui86/assets-uploader/util/appversion.appVersion=${{ env.APP_VERSION }}" -X "github.com/ui86/assets-uploader/util/appversion.buildTime=${{ env.BUILD_TIME }}" -X github.com/ui86/assets-uploader/util/appversion.gitCommit=${{ github.sha }} -X main.gitRef=${{ github.ref }}

        

